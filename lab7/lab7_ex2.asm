;=================================================
; Name: 
; Email: 
; 
; Lab: lab 6, ex 2
; Lab section: 
; TA: 
; 
;=================================================
;MAIN
;=================================================
.ORIG x3000
LEA R0, INTRO_PROMPT
PUTS

GETC					;ASKS USER TO INPUT A SINGLE CHARACTER
OUT

LD R6, SUB_BINARY_1		;CALL SUBROUTINE
JSRR R6

AND R3, R3, x0
ADD R3, R3, R0
LD R0, NEWLINE
OUT

LEA R0, OUT_PROMPT
PUTS

ADD R0, R3, #0
OUT

LEA R0, OUT_PROMPT2
PUTS

ADD R0, R2, #0
LD R4, ASCII_MAIN
ADD R0, R0, R4
OUT

LD R0, NEWLINE
OUT

HALT
;DATA
SUB_BINARY_1	.FILL x3200
INTRO_PROMPT	.STRINGZ "\n Enter a single character: "
OUT_PROMPT		.STRINGZ "The number of 1's in "
OUT_PROMPT2		.STRINGZ " is: "
ASCII_MAIN		.FILL #48
NEWLINE			.FILL '\n'


;======================================================================
;SUBROUTINE: SUB_BINARY_1
;-RETURNS NUMBER OF 1'S IN THE BINARY NUMBER IN R2
;======================================================================
.ORIG x3200

ST R0, BACKUP_R0_3200
ST R1, BACKUP_R1_3200
;ST R3, BACKUP_R3_3200
ST R7, BACKUP_R7_3200

ADD R1, R0, #0		;LOAD NUMBER THAT WAS INPUTTED INTO R1
AND R2, R2, x0		;ZERO R2 WHICH WILL CONTAIN NUM OF 1'S
LD R3, COUNTER

	LD R4, ASCII_47
	ADD R4, R4, R1		;if INPUT-47 IS NEGATIVE OR 47, NUM IS LESS THAN 47->IS SYMBOL
	BRnz DO_LOOP_3200	;SKIP SUBTRACTING 48
	BRp CHECK_NEXT
CHECK_NEXT
	LD R4, ASCII_58
	ADD R4, R4, R1		;IF INPUT-58 IS POSITIVE, WAS > THAN 58 OR 58
	BRzp DO_LOOP_3200	;THE INPUT IS A SYMBOL
	BRn ISNUM     ;IF NEGATIVE, INPUT IS A NUM 
ISNUM
	LD R4, ASCII_CONVERT
	ADD R1, R1, R4		;SUBTRACT 48
	BRnzp DO_LOOP_3200

DO_LOOP_3200
	
		ADD R1, R1, #0	;WILL CHECK IF LEFTMOST DIG IS 1 OR 0
		BRzp IS_POS		;IF FIRST_CHAR IS 0, IT IS POSITIVE
		BRn IS_NEG		;IF FIRST CHAR IS ONE, IT IS NEGATIVE
	IS_POS				;DO NOTHING IF POS
		BRnzp NEXT_STEP
	IS_NEG
		ADD R2, R2, #1		;WILL ADD 1 TO R2 IF FIRST DIG WAS 1
		BRnzp NEXT_STEP
	NEXT_STEP
		ADD R1, R1, R1		;SHIFT R1
		ADD R3, R3, #-1
		BRp DO_LOOP_3200
END_DO_LOOP_3200

RET
LD R0, BACKUP_R0_3200
LD R1, BACKUP_R1_3200
;LD R3, BACKUP_R3_3200
LD R7, BACKUP_R7_3200

;DATA
BACKUP_R0_3200	.BLKW #1
BACKUP_R1_3200	.BLKW #1
BACKUP_R3_3200	.BLKW #1
BACKUP_R7_3200	.BLKW #1
COUNTER			.FILL #16	;FOR COUNTING 16 ITERATIONS IN MY LOOP
ASCII_CONVERT	.FILL #-48
ASCII_47		.FILL #-47
ASCII_58		.FILL #-58
ASCII_64		.FILL #-64
ASCII_90		.FILL #-90
ASCII_96		.FILL #-96
ASCII_122		.FILL #-122

.END
